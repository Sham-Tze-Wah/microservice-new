spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.url=jdbc:mysql://localhost:3307/order-service?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234
spring.jpa.hibernate.ddl-auto=update

server.port=8081
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
    #Check for health state
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
    #won't open circuit breaker right away, if fails, wait for number of requests of failing then change status (open to close)
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
    #5 fails then close
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
    #
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
    #
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
    #
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
    #
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s